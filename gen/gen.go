package main

import (
	"bytes"
	"io/ioutil"
	"log"
	"os"
	"text/template"
)

//go:generate go run gen.go

var templateVar = `// Code generated by gen.go DONT'T EDIT!!!
package generated

import (
    b64 "encoding/base64"
)

type {{.Type}} struct {}

func (v *GenerationService) GetGeneratedData(initialString string) string {
	return b64.StdEncoding.EncodeToString([]byte(initialString))
}
`

func main() {
	templateVar, err := template.New("").Parse(templateVar)
	if err != nil {
		log.Fatal(err)
	}
	buffer := &bytes.Buffer{}
	err = templateVar.Execute(buffer, struct {
		Type string
	}{
		Type: os.Getenv("TYPE"),
	})
	if err != nil {
		log.Fatal(err)
	}
	err = ioutil.WriteFile(os.Getenv("OUTPUT"), buffer.Bytes(), 0644)
	if err != nil {
		log.Fatal(err)
	}
}
